<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:ZtxFrameWork.UI.Converters"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxga="http://schemas.devexpress.com/winfx/2008/xaml/gauges"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:local="clr-namespace:ZtxFrameWork.UI.Styles"
                    xmlns:utils="clr-namespace:ZtxFrameWork.UI.Utils">


    <converter:GridRowIndicatorConerter x:Key="GridRowIndicatorConerter" />
    <converter:CommObjectConverter x:Key="CommObjectConverter" />

    <utils:ApplicationSet x:Key="AppSet"
                          Title="拓邦螺丝物流管理系统"
                          IcoPath="Images/arpa.ico" />


    <!--  表格行状态颜色样式  TargetType="{x:Type dxg:GridRowContent}"  -->
    <Style x:Key="optimizedDirtyStateRow" TargetType="{x:Type dxg:RowControl}">
        <!--<Setter Property="Background" Value="Bisque"></Setter>-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Row.DirtyState}" Value="Added">
                <Setter Property="Foreground" Value="MediumVioletRed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Row.DirtyState}" Value="Modified">
                <Setter Property="Foreground" Value="BlueViolet" />
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding Path=Row.DirtyState}" Value="Deleted">
                <Setter Property="Foreground" Value="Coral"></Setter>
            </DataTrigger>-->
        </Style.Triggers>
    </Style>
    <!--  表格行号  -->
    <DataTemplate x:Key="GridRowIndicator">
        <StackPanel x:Name="root"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Orientation="Horizontal">
            <TextBlock Margin="0,0,0,0" Text="{Binding Path=RowHandle.Value, Converter={StaticResource GridRowIndicatorConerter}}" />
            <ContentPresenter x:Name="iconPresenter"
                              Content="{x:Null}"
                              IsHitTestVisible="False" />
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Focused">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=FocusedIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Changed">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ChangedIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="NewItemRow">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=NewItemRowIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Editing">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=EditingIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Error">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ErrorIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="FocusedError">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=FocusedErrorIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="AutoFilterRow">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=AutoFilterRowIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.HasValidationError)}" Value="True">
                <Setter TargetName="root" Property="ToolTip">
                    <Setter.Value>
                        <DockPanel>
                            <dxe:ErrorControl Content="{Binding Path=(dxe:BaseEdit.ValidationError)}" />
                            <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=(dxe:BaseEdit.ValidationError).ErrorContent}" />
                        </DockPanel>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--  明细表细风格  -->
    <Style x:Key="DetailsTableView" TargetType="{x:Type dxg:TableView}">
        <Setter Property="AllowColumnFiltering" Value="False" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="AllowSorting" Value="False" />
        <Setter Property="AllowGrouping" Value="False" />
        <Setter Property="IndicatorWidth" Value="40" />
        <Setter Property="NavigationStyle" Value="Cell" />
        <Setter Property="ShowGroupPanel" Value="False" />
        <Setter Property="UseLightweightTemplates" Value="All" />
        <Setter Property="RowIndicatorContentTemplate" Value="{StaticResource ResourceKey=GridRowIndicator}" />
        <!--<Setter Property="RowStyle" Value="{StaticResource optimizedDirtyStateRow}" />-->
    </Style>

    <!--  列头居左对齐  -->
    <Style x:Key="GridColumnHeaderLeftAlignment" TargetType="{x:Type dxg:HeaderContentControl}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>
    <!--  列头居中对齐  -->
    <Style x:Key="GridColumnHeaderCenterAlignment" TargetType="{x:Type dxg:HeaderContentControl}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
</ResourceDictionary>